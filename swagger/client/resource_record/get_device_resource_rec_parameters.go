// Code generated by go-swagger; DO NOT EDIT.

package resource_record

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetDeviceResourceRecParams creates a new GetDeviceResourceRecParams object
// with the default values initialized.
func NewGetDeviceResourceRecParams() *GetDeviceResourceRecParams {
	var ()
	return &GetDeviceResourceRecParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetDeviceResourceRecParamsWithTimeout creates a new GetDeviceResourceRecParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetDeviceResourceRecParamsWithTimeout(timeout time.Duration) *GetDeviceResourceRecParams {
	var ()
	return &GetDeviceResourceRecParams{

		timeout: timeout,
	}
}

// NewGetDeviceResourceRecParamsWithContext creates a new GetDeviceResourceRecParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetDeviceResourceRecParamsWithContext(ctx context.Context) *GetDeviceResourceRecParams {
	var ()
	return &GetDeviceResourceRecParams{

		Context: ctx,
	}
}

// NewGetDeviceResourceRecParamsWithHTTPClient creates a new GetDeviceResourceRecParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetDeviceResourceRecParamsWithHTTPClient(client *http.Client) *GetDeviceResourceRecParams {
	var ()
	return &GetDeviceResourceRecParams{
		HTTPClient: client,
	}
}

/*GetDeviceResourceRecParams contains all the parameters to send to the API endpoint
for the get device resource rec operation typically these are written to a http.Request
*/
type GetDeviceResourceRecParams struct {

	/*Classtype
	  The value currently supported is 'IN'

	*/
	Classtype *string
	/*Container
	  The name of the container that holds the device; required only if IP address is not unique

	*/
	Container *string
	/*DomainName
	  The name of the domain

	*/
	DomainName string
	/*DomainTypeName
	  The name of the domain type to which the domain belongs; defaults to 'Default'

	*/
	DomainTypeName *string
	/*Hostname
	  The device host name

	*/
	Hostname *string
	/*IPAddress
	  The IP address of the device

	*/
	IPAddress *string
	/*Owner
	  The resource record owner

	*/
	Owner string
	/*Rdata
	  The resource record data text

	*/
	Rdata *string
	/*Type
	  The resource record type

	*/
	Type string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get device resource rec params
func (o *GetDeviceResourceRecParams) WithTimeout(timeout time.Duration) *GetDeviceResourceRecParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get device resource rec params
func (o *GetDeviceResourceRecParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get device resource rec params
func (o *GetDeviceResourceRecParams) WithContext(ctx context.Context) *GetDeviceResourceRecParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get device resource rec params
func (o *GetDeviceResourceRecParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get device resource rec params
func (o *GetDeviceResourceRecParams) WithHTTPClient(client *http.Client) *GetDeviceResourceRecParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get device resource rec params
func (o *GetDeviceResourceRecParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithClasstype adds the classtype to the get device resource rec params
func (o *GetDeviceResourceRecParams) WithClasstype(classtype *string) *GetDeviceResourceRecParams {
	o.SetClasstype(classtype)
	return o
}

// SetClasstype adds the classtype to the get device resource rec params
func (o *GetDeviceResourceRecParams) SetClasstype(classtype *string) {
	o.Classtype = classtype
}

// WithContainer adds the container to the get device resource rec params
func (o *GetDeviceResourceRecParams) WithContainer(container *string) *GetDeviceResourceRecParams {
	o.SetContainer(container)
	return o
}

// SetContainer adds the container to the get device resource rec params
func (o *GetDeviceResourceRecParams) SetContainer(container *string) {
	o.Container = container
}

// WithDomainName adds the domainName to the get device resource rec params
func (o *GetDeviceResourceRecParams) WithDomainName(domainName string) *GetDeviceResourceRecParams {
	o.SetDomainName(domainName)
	return o
}

// SetDomainName adds the domainName to the get device resource rec params
func (o *GetDeviceResourceRecParams) SetDomainName(domainName string) {
	o.DomainName = domainName
}

// WithDomainTypeName adds the domainTypeName to the get device resource rec params
func (o *GetDeviceResourceRecParams) WithDomainTypeName(domainTypeName *string) *GetDeviceResourceRecParams {
	o.SetDomainTypeName(domainTypeName)
	return o
}

// SetDomainTypeName adds the domainTypeName to the get device resource rec params
func (o *GetDeviceResourceRecParams) SetDomainTypeName(domainTypeName *string) {
	o.DomainTypeName = domainTypeName
}

// WithHostname adds the hostname to the get device resource rec params
func (o *GetDeviceResourceRecParams) WithHostname(hostname *string) *GetDeviceResourceRecParams {
	o.SetHostname(hostname)
	return o
}

// SetHostname adds the hostname to the get device resource rec params
func (o *GetDeviceResourceRecParams) SetHostname(hostname *string) {
	o.Hostname = hostname
}

// WithIPAddress adds the iPAddress to the get device resource rec params
func (o *GetDeviceResourceRecParams) WithIPAddress(iPAddress *string) *GetDeviceResourceRecParams {
	o.SetIPAddress(iPAddress)
	return o
}

// SetIPAddress adds the ipAddress to the get device resource rec params
func (o *GetDeviceResourceRecParams) SetIPAddress(iPAddress *string) {
	o.IPAddress = iPAddress
}

// WithOwner adds the owner to the get device resource rec params
func (o *GetDeviceResourceRecParams) WithOwner(owner string) *GetDeviceResourceRecParams {
	o.SetOwner(owner)
	return o
}

// SetOwner adds the owner to the get device resource rec params
func (o *GetDeviceResourceRecParams) SetOwner(owner string) {
	o.Owner = owner
}

// WithRdata adds the rdata to the get device resource rec params
func (o *GetDeviceResourceRecParams) WithRdata(rdata *string) *GetDeviceResourceRecParams {
	o.SetRdata(rdata)
	return o
}

// SetRdata adds the rdata to the get device resource rec params
func (o *GetDeviceResourceRecParams) SetRdata(rdata *string) {
	o.Rdata = rdata
}

// WithType adds the typeVar to the get device resource rec params
func (o *GetDeviceResourceRecParams) WithType(typeVar string) *GetDeviceResourceRecParams {
	o.SetType(typeVar)
	return o
}

// SetType adds the type to the get device resource rec params
func (o *GetDeviceResourceRecParams) SetType(typeVar string) {
	o.Type = typeVar
}

// WriteToRequest writes these params to a swagger request
func (o *GetDeviceResourceRecParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Classtype != nil {

		// query param classtype
		var qrClasstype string
		if o.Classtype != nil {
			qrClasstype = *o.Classtype
		}
		qClasstype := qrClasstype
		if qClasstype != "" {
			if err := r.SetQueryParam("classtype", qClasstype); err != nil {
				return err
			}
		}

	}

	if o.Container != nil {

		// query param container
		var qrContainer string
		if o.Container != nil {
			qrContainer = *o.Container
		}
		qContainer := qrContainer
		if qContainer != "" {
			if err := r.SetQueryParam("container", qContainer); err != nil {
				return err
			}
		}

	}

	// query param domainName
	qrDomainName := o.DomainName
	qDomainName := qrDomainName
	if qDomainName != "" {
		if err := r.SetQueryParam("domainName", qDomainName); err != nil {
			return err
		}
	}

	if o.DomainTypeName != nil {

		// query param domainTypeName
		var qrDomainTypeName string
		if o.DomainTypeName != nil {
			qrDomainTypeName = *o.DomainTypeName
		}
		qDomainTypeName := qrDomainTypeName
		if qDomainTypeName != "" {
			if err := r.SetQueryParam("domainTypeName", qDomainTypeName); err != nil {
				return err
			}
		}

	}

	if o.Hostname != nil {

		// query param hostname
		var qrHostname string
		if o.Hostname != nil {
			qrHostname = *o.Hostname
		}
		qHostname := qrHostname
		if qHostname != "" {
			if err := r.SetQueryParam("hostname", qHostname); err != nil {
				return err
			}
		}

	}

	if o.IPAddress != nil {

		// query param ipAddress
		var qrIPAddress string
		if o.IPAddress != nil {
			qrIPAddress = *o.IPAddress
		}
		qIPAddress := qrIPAddress
		if qIPAddress != "" {
			if err := r.SetQueryParam("ipAddress", qIPAddress); err != nil {
				return err
			}
		}

	}

	// query param owner
	qrOwner := o.Owner
	qOwner := qrOwner
	if qOwner != "" {
		if err := r.SetQueryParam("owner", qOwner); err != nil {
			return err
		}
	}

	if o.Rdata != nil {

		// query param rdata
		var qrRdata string
		if o.Rdata != nil {
			qrRdata = *o.Rdata
		}
		qRdata := qrRdata
		if qRdata != "" {
			if err := r.SetQueryParam("rdata", qRdata); err != nil {
				return err
			}
		}

	}

	// query param type
	qrType := o.Type
	qType := qrType
	if qType != "" {
		if err := r.SetQueryParam("type", qType); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
