// Code generated by go-swagger; DO NOT EDIT.

package resource_record

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/CMSgov/CMS-AWS-West-Network-Architecture/vpc-automation/swagger/models"
)

// GetZoneResourceRecReader is a Reader for the GetZoneResourceRec structure.
type GetZoneResourceRecReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetZoneResourceRecReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetZoneResourceRecOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewGetZoneResourceRecDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetZoneResourceRecOK creates a GetZoneResourceRecOK with default headers values
func NewGetZoneResourceRecOK() *GetZoneResourceRecOK {
	return &GetZoneResourceRecOK{}
}

/*GetZoneResourceRecOK handles this case with default header values.

ZoneResourceRecord
*/
type GetZoneResourceRecOK struct {
	Payload *models.WSZoneResourceRec
}

func (o *GetZoneResourceRecOK) Error() string {
	return fmt.Sprintf("[GET /Gets/getZoneResourceRecord][%d] getZoneResourceRecOK  %+v", 200, o.Payload)
}

func (o *GetZoneResourceRecOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.WSZoneResourceRec)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetZoneResourceRecDefault creates a GetZoneResourceRecDefault with default headers values
func NewGetZoneResourceRecDefault(code int) *GetZoneResourceRecDefault {
	return &GetZoneResourceRecDefault{
		_statusCode: code,
	}
}

/*GetZoneResourceRecDefault handles this case with default header values.

Error response
*/
type GetZoneResourceRecDefault struct {
	_statusCode int

	Payload *models.Fault
}

// Code gets the status code for the get zone resource rec default response
func (o *GetZoneResourceRecDefault) Code() int {
	return o._statusCode
}

func (o *GetZoneResourceRecDefault) Error() string {
	return fmt.Sprintf("[GET /Gets/getZoneResourceRecord][%d] getZoneResourceRec default  %+v", o._statusCode, o.Payload)
}

func (o *GetZoneResourceRecDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Fault)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
