// Code generated by go-swagger; DO NOT EDIT.

package task

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/CMSgov/CMS-AWS-West-Network-Architecture/vpc-automation/swagger/models"
)

// GetTaskStatusReader is a Reader for the GetTaskStatus structure.
type GetTaskStatusReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTaskStatusReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetTaskStatusOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewGetTaskStatusDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetTaskStatusOK creates a GetTaskStatusOK with default headers values
func NewGetTaskStatusOK() *GetTaskStatusOK {
	return &GetTaskStatusOK{}
}

/*GetTaskStatusOK handles this case with default header values.

TaskStatus
*/
type GetTaskStatusOK struct {
	Payload *GetTaskStatusOKBody
}

func (o *GetTaskStatusOK) Error() string {
	return fmt.Sprintf("[GET /TaskInvocation/getTaskStatus][%d] getTaskStatusOK  %+v", 200, o.Payload)
}

func (o *GetTaskStatusOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetTaskStatusOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTaskStatusDefault creates a GetTaskStatusDefault with default headers values
func NewGetTaskStatusDefault(code int) *GetTaskStatusDefault {
	return &GetTaskStatusDefault{
		_statusCode: code,
	}
}

/*GetTaskStatusDefault handles this case with default header values.

Error response
*/
type GetTaskStatusDefault struct {
	_statusCode int

	Payload *models.Fault
}

// Code gets the status code for the get task status default response
func (o *GetTaskStatusDefault) Code() int {
	return o._statusCode
}

func (o *GetTaskStatusDefault) Error() string {
	return fmt.Sprintf("[GET /TaskInvocation/getTaskStatus][%d] getTaskStatus default  %+v", o._statusCode, o.Payload)
}

func (o *GetTaskStatusDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Fault)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetTaskStatusOKBody get task status o k body
swagger:model GetTaskStatusOKBody
*/
type GetTaskStatusOKBody struct {

	// result
	Result string `json:"result,omitempty"`
}

// Validate validates this get task status o k body
func (o *GetTaskStatusOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetTaskStatusOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetTaskStatusOKBody) UnmarshalBinary(b []byte) error {
	var res GetTaskStatusOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
