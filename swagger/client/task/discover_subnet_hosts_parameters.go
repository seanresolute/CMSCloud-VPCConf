// Code generated by go-swagger; DO NOT EDIT.

package task

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewDiscoverSubnetHostsParams creates a new DiscoverSubnetHostsParams object
// with the default values initialized.
func NewDiscoverSubnetHostsParams() *DiscoverSubnetHostsParams {
	var ()
	return &DiscoverSubnetHostsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewDiscoverSubnetHostsParamsWithTimeout creates a new DiscoverSubnetHostsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDiscoverSubnetHostsParamsWithTimeout(timeout time.Duration) *DiscoverSubnetHostsParams {
	var ()
	return &DiscoverSubnetHostsParams{

		timeout: timeout,
	}
}

// NewDiscoverSubnetHostsParamsWithContext creates a new DiscoverSubnetHostsParams object
// with the default values initialized, and the ability to set a context for a request
func NewDiscoverSubnetHostsParamsWithContext(ctx context.Context) *DiscoverSubnetHostsParams {
	var ()
	return &DiscoverSubnetHostsParams{

		Context: ctx,
	}
}

// NewDiscoverSubnetHostsParamsWithHTTPClient creates a new DiscoverSubnetHostsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDiscoverSubnetHostsParamsWithHTTPClient(client *http.Client) *DiscoverSubnetHostsParams {
	var ()
	return &DiscoverSubnetHostsParams{
		HTTPClient: client,
	}
}

/*DiscoverSubnetHostsParams contains all the parameters to send to the API endpoint
for the discover subnet hosts operation typically these are written to a http.Request
*/
type DiscoverSubnetHostsParams struct {

	/*TaskParameters
	  subnetAddress (required if container not specified): block name or CIDR address of subnet; container (required if subnetAddress not specified): container name for discovery, or, if subnetAddress is specified, used to resolve ambiguity; pingHosts: Set to 'pingOnly' or 'pingWithTCP' to ping hosts during discovery; lookupHostname: Set to true to perform a DNS lookup during host discovery; performNetHostAdd: Set to true to automatically add new hosts that are found during discovery; performNetRRAdd: With performNetHostAdd, set to true to automatically add DNS resource records for new hosts that are found during discovery. ignoreDuplicates: With performNetHostAdd, set to true to ignore duplicate hostnames encountered while adding new hosts; priority: Set priority to true to create a high priority task.

	*/
	TaskParameters DiscoverSubnetHostsBody

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the discover subnet hosts params
func (o *DiscoverSubnetHostsParams) WithTimeout(timeout time.Duration) *DiscoverSubnetHostsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the discover subnet hosts params
func (o *DiscoverSubnetHostsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the discover subnet hosts params
func (o *DiscoverSubnetHostsParams) WithContext(ctx context.Context) *DiscoverSubnetHostsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the discover subnet hosts params
func (o *DiscoverSubnetHostsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the discover subnet hosts params
func (o *DiscoverSubnetHostsParams) WithHTTPClient(client *http.Client) *DiscoverSubnetHostsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the discover subnet hosts params
func (o *DiscoverSubnetHostsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithTaskParameters adds the taskParameters to the discover subnet hosts params
func (o *DiscoverSubnetHostsParams) WithTaskParameters(taskParameters DiscoverSubnetHostsBody) *DiscoverSubnetHostsParams {
	o.SetTaskParameters(taskParameters)
	return o
}

// SetTaskParameters adds the taskParameters to the discover subnet hosts params
func (o *DiscoverSubnetHostsParams) SetTaskParameters(taskParameters DiscoverSubnetHostsBody) {
	o.TaskParameters = taskParameters
}

// WriteToRequest writes these params to a swagger request
func (o *DiscoverSubnetHostsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if err := r.SetBodyParam(o.TaskParameters); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
