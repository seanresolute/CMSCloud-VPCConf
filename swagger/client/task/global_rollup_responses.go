// Code generated by go-swagger; DO NOT EDIT.

package task

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/CMSgov/CMS-AWS-West-Network-Architecture/vpc-automation/swagger/models"
)

// GlobalRollupReader is a Reader for the GlobalRollup structure.
type GlobalRollupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GlobalRollupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGlobalRollupOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewGlobalRollupDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGlobalRollupOK creates a GlobalRollupOK with default headers values
func NewGlobalRollupOK() *GlobalRollupOK {
	return &GlobalRollupOK{}
}

/*GlobalRollupOK handles this case with default header values.

integer returned
*/
type GlobalRollupOK struct {
	Payload *GlobalRollupOKBody
}

func (o *GlobalRollupOK) Error() string {
	return fmt.Sprintf("[POST /TaskInvocation/globalRollup][%d] globalRollupOK  %+v", 200, o.Payload)
}

func (o *GlobalRollupOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GlobalRollupOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGlobalRollupDefault creates a GlobalRollupDefault with default headers values
func NewGlobalRollupDefault(code int) *GlobalRollupDefault {
	return &GlobalRollupDefault{
		_statusCode: code,
	}
}

/*GlobalRollupDefault handles this case with default header values.

Error response
*/
type GlobalRollupDefault struct {
	_statusCode int

	Payload *models.Fault
}

// Code gets the status code for the global rollup default response
func (o *GlobalRollupDefault) Code() int {
	return o._statusCode
}

func (o *GlobalRollupDefault) Error() string {
	return fmt.Sprintf("[POST /TaskInvocation/globalRollup][%d] globalRollup default  %+v", o._statusCode, o.Payload)
}

func (o *GlobalRollupDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Fault)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GlobalRollupBody global rollup body
swagger:model GlobalRollupBody
*/
type GlobalRollupBody struct {

	// period type
	PeriodType string `json:"_periodType,omitempty"`

	// period length
	PeriodLength int64 `json:"periodLength,omitempty"`

	// priority
	Priority bool `json:"priority,omitempty"`
}

// Validate validates this global rollup body
func (o *GlobalRollupBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GlobalRollupBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GlobalRollupBody) UnmarshalBinary(b []byte) error {
	var res GlobalRollupBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GlobalRollupOKBody global rollup o k body
swagger:model GlobalRollupOKBody
*/
type GlobalRollupOKBody struct {

	// result
	Result int64 `json:"result,omitempty"`
}

// Validate validates this global rollup o k body
func (o *GlobalRollupOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GlobalRollupOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GlobalRollupOKBody) UnmarshalBinary(b []byte) error {
	var res GlobalRollupOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
