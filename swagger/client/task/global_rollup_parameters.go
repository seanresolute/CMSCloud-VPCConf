// Code generated by go-swagger; DO NOT EDIT.

package task

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGlobalRollupParams creates a new GlobalRollupParams object
// with the default values initialized.
func NewGlobalRollupParams() *GlobalRollupParams {
	var ()
	return &GlobalRollupParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGlobalRollupParamsWithTimeout creates a new GlobalRollupParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGlobalRollupParamsWithTimeout(timeout time.Duration) *GlobalRollupParams {
	var ()
	return &GlobalRollupParams{

		timeout: timeout,
	}
}

// NewGlobalRollupParamsWithContext creates a new GlobalRollupParams object
// with the default values initialized, and the ability to set a context for a request
func NewGlobalRollupParamsWithContext(ctx context.Context) *GlobalRollupParams {
	var ()
	return &GlobalRollupParams{

		Context: ctx,
	}
}

// NewGlobalRollupParamsWithHTTPClient creates a new GlobalRollupParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGlobalRollupParamsWithHTTPClient(client *http.Client) *GlobalRollupParams {
	var ()
	return &GlobalRollupParams{
		HTTPClient: client,
	}
}

/*GlobalRollupParams contains all the parameters to send to the API endpoint
for the global rollup operation typically these are written to a http.Request
*/
type GlobalRollupParams struct {

	/*TaskParameters
	  Use periodLength to specify the number of time periods to be included in the regression. Use _periodType to specify the type of time period: D (days), W (weeks), M (months), Y (years). Both parameters are required. Set priority to true to create a high priority task.

	*/
	TaskParameters GlobalRollupBody

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the global rollup params
func (o *GlobalRollupParams) WithTimeout(timeout time.Duration) *GlobalRollupParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the global rollup params
func (o *GlobalRollupParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the global rollup params
func (o *GlobalRollupParams) WithContext(ctx context.Context) *GlobalRollupParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the global rollup params
func (o *GlobalRollupParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the global rollup params
func (o *GlobalRollupParams) WithHTTPClient(client *http.Client) *GlobalRollupParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the global rollup params
func (o *GlobalRollupParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithTaskParameters adds the taskParameters to the global rollup params
func (o *GlobalRollupParams) WithTaskParameters(taskParameters GlobalRollupBody) *GlobalRollupParams {
	o.SetTaskParameters(taskParameters)
	return o
}

// SetTaskParameters adds the taskParameters to the global rollup params
func (o *GlobalRollupParams) SetTaskParameters(taskParameters GlobalRollupBody) {
	o.TaskParameters = taskParameters
}

// WriteToRequest writes these params to a swagger request
func (o *GlobalRollupParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if err := r.SetBodyParam(o.TaskParameters); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
