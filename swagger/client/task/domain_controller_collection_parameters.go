// Code generated by go-swagger; DO NOT EDIT.

package task

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewDomainControllerCollectionParams creates a new DomainControllerCollectionParams object
// with the default values initialized.
func NewDomainControllerCollectionParams() *DomainControllerCollectionParams {
	var ()
	return &DomainControllerCollectionParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewDomainControllerCollectionParamsWithTimeout creates a new DomainControllerCollectionParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDomainControllerCollectionParamsWithTimeout(timeout time.Duration) *DomainControllerCollectionParams {
	var ()
	return &DomainControllerCollectionParams{

		timeout: timeout,
	}
}

// NewDomainControllerCollectionParamsWithContext creates a new DomainControllerCollectionParams object
// with the default values initialized, and the ability to set a context for a request
func NewDomainControllerCollectionParamsWithContext(ctx context.Context) *DomainControllerCollectionParams {
	var ()
	return &DomainControllerCollectionParams{

		Context: ctx,
	}
}

// NewDomainControllerCollectionParamsWithHTTPClient creates a new DomainControllerCollectionParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDomainControllerCollectionParamsWithHTTPClient(client *http.Client) *DomainControllerCollectionParams {
	var ()
	return &DomainControllerCollectionParams{
		HTTPClient: client,
	}
}

/*DomainControllerCollectionParams contains all the parameters to send to the API endpoint
for the domain controller collection operation typically these are written to a http.Request
*/
type DomainControllerCollectionParams struct {

	/*TaskParameters
	  One of name or ip must be specified; dcName: Domain Controller Name.  ipAddress: IP Address of domain controller; container: Parent container in which to create missing sites; priority: True to create a high priority task.

	*/
	TaskParameters DomainControllerCollectionBody

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the domain controller collection params
func (o *DomainControllerCollectionParams) WithTimeout(timeout time.Duration) *DomainControllerCollectionParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the domain controller collection params
func (o *DomainControllerCollectionParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the domain controller collection params
func (o *DomainControllerCollectionParams) WithContext(ctx context.Context) *DomainControllerCollectionParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the domain controller collection params
func (o *DomainControllerCollectionParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the domain controller collection params
func (o *DomainControllerCollectionParams) WithHTTPClient(client *http.Client) *DomainControllerCollectionParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the domain controller collection params
func (o *DomainControllerCollectionParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithTaskParameters adds the taskParameters to the domain controller collection params
func (o *DomainControllerCollectionParams) WithTaskParameters(taskParameters DomainControllerCollectionBody) *DomainControllerCollectionParams {
	o.SetTaskParameters(taskParameters)
	return o
}

// SetTaskParameters adds the taskParameters to the domain controller collection params
func (o *DomainControllerCollectionParams) SetTaskParameters(taskParameters DomainControllerCollectionBody) {
	o.TaskParameters = taskParameters
}

// WriteToRequest writes these params to a swagger request
func (o *DomainControllerCollectionParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if err := r.SetBodyParam(o.TaskParameters); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
