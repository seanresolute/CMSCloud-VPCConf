// Code generated by go-swagger; DO NOT EDIT.

package task

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewDeleteTaskByDaysParams creates a new DeleteTaskByDaysParams object
// with the default values initialized.
func NewDeleteTaskByDaysParams() *DeleteTaskByDaysParams {
	var ()
	return &DeleteTaskByDaysParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteTaskByDaysParamsWithTimeout creates a new DeleteTaskByDaysParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDeleteTaskByDaysParamsWithTimeout(timeout time.Duration) *DeleteTaskByDaysParams {
	var ()
	return &DeleteTaskByDaysParams{

		timeout: timeout,
	}
}

// NewDeleteTaskByDaysParamsWithContext creates a new DeleteTaskByDaysParams object
// with the default values initialized, and the ability to set a context for a request
func NewDeleteTaskByDaysParamsWithContext(ctx context.Context) *DeleteTaskByDaysParams {
	var ()
	return &DeleteTaskByDaysParams{

		Context: ctx,
	}
}

// NewDeleteTaskByDaysParamsWithHTTPClient creates a new DeleteTaskByDaysParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDeleteTaskByDaysParamsWithHTTPClient(client *http.Client) *DeleteTaskByDaysParams {
	var ()
	return &DeleteTaskByDaysParams{
		HTTPClient: client,
	}
}

/*DeleteTaskByDaysParams contains all the parameters to send to the API endpoint
for the delete task by days operation typically these are written to a http.Request
*/
type DeleteTaskByDaysParams struct {

	/*DeleteParameters
	  The number of days as a positive integer.

	*/
	DeleteParameters DeleteTaskByDaysBody

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the delete task by days params
func (o *DeleteTaskByDaysParams) WithTimeout(timeout time.Duration) *DeleteTaskByDaysParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete task by days params
func (o *DeleteTaskByDaysParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete task by days params
func (o *DeleteTaskByDaysParams) WithContext(ctx context.Context) *DeleteTaskByDaysParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete task by days params
func (o *DeleteTaskByDaysParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete task by days params
func (o *DeleteTaskByDaysParams) WithHTTPClient(client *http.Client) *DeleteTaskByDaysParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete task by days params
func (o *DeleteTaskByDaysParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDeleteParameters adds the deleteParameters to the delete task by days params
func (o *DeleteTaskByDaysParams) WithDeleteParameters(deleteParameters DeleteTaskByDaysBody) *DeleteTaskByDaysParams {
	o.SetDeleteParameters(deleteParameters)
	return o
}

// SetDeleteParameters adds the deleteParameters to the delete task by days params
func (o *DeleteTaskByDaysParams) SetDeleteParameters(deleteParameters DeleteTaskByDaysBody) {
	o.DeleteParameters = deleteParameters
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteTaskByDaysParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if err := r.SetBodyParam(o.DeleteParameters); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
