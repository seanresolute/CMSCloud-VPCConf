// Code generated by go-swagger; DO NOT EDIT.

package task

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/CMSgov/CMS-AWS-West-Network-Architecture/vpc-automation/swagger/models"
)

// DhcpUtilizationReader is a Reader for the DhcpUtilization structure.
type DhcpUtilizationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DhcpUtilizationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewDhcpUtilizationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewDhcpUtilizationDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDhcpUtilizationOK creates a DhcpUtilizationOK with default headers values
func NewDhcpUtilizationOK() *DhcpUtilizationOK {
	return &DhcpUtilizationOK{}
}

/*DhcpUtilizationOK handles this case with default header values.

integer returned
*/
type DhcpUtilizationOK struct {
	Payload *DhcpUtilizationOKBody
}

func (o *DhcpUtilizationOK) Error() string {
	return fmt.Sprintf("[POST /TaskInvocation/dhcpUtilization][%d] dhcpUtilizationOK  %+v", 200, o.Payload)
}

func (o *DhcpUtilizationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(DhcpUtilizationOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDhcpUtilizationDefault creates a DhcpUtilizationDefault with default headers values
func NewDhcpUtilizationDefault(code int) *DhcpUtilizationDefault {
	return &DhcpUtilizationDefault{
		_statusCode: code,
	}
}

/*DhcpUtilizationDefault handles this case with default header values.

Error response
*/
type DhcpUtilizationDefault struct {
	_statusCode int

	Payload *models.Fault
}

// Code gets the status code for the dhcp utilization default response
func (o *DhcpUtilizationDefault) Code() int {
	return o._statusCode
}

func (o *DhcpUtilizationDefault) Error() string {
	return fmt.Sprintf("[POST /TaskInvocation/dhcpUtilization][%d] dhcpUtilization default  %+v", o._statusCode, o.Payload)
}

func (o *DhcpUtilizationDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Fault)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*DhcpUtilizationBody dhcp utilization body
swagger:model DhcpUtilizationBody
*/
type DhcpUtilizationBody struct {

	// element name
	ElementName string `json:"elementName,omitempty"`

	// ip address
	IPAddress string `json:"ipAddress,omitempty"`

	// priority
	Priority bool `json:"priority,omitempty"`
}

// Validate validates this dhcp utilization body
func (o *DhcpUtilizationBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *DhcpUtilizationBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DhcpUtilizationBody) UnmarshalBinary(b []byte) error {
	var res DhcpUtilizationBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*DhcpUtilizationOKBody dhcp utilization o k body
swagger:model DhcpUtilizationOKBody
*/
type DhcpUtilizationOKBody struct {

	// result
	Result int64 `json:"result,omitempty"`
}

// Validate validates this dhcp utilization o k body
func (o *DhcpUtilizationOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *DhcpUtilizationOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DhcpUtilizationOKBody) UnmarshalBinary(b []byte) error {
	var res DhcpUtilizationOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
