// Code generated by go-swagger; DO NOT EDIT.

package task

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/CMSgov/CMS-AWS-West-Network-Architecture/vpc-automation/swagger/models"
)

// DeleteTaskByIDReader is a Reader for the DeleteTaskByID structure.
type DeleteTaskByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteTaskByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewDeleteTaskByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewDeleteTaskByIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteTaskByIDOK creates a DeleteTaskByIDOK with default headers values
func NewDeleteTaskByIDOK() *DeleteTaskByIDOK {
	return &DeleteTaskByIDOK{}
}

/*DeleteTaskByIDOK handles this case with default header values.

Deleted a Task
*/
type DeleteTaskByIDOK struct {
	Payload *DeleteTaskByIDOKBody
}

func (o *DeleteTaskByIDOK) Error() string {
	return fmt.Sprintf("[DELETE /Deletes/deleteTaskById][%d] deleteTaskByIdOK  %+v", 200, o.Payload)
}

func (o *DeleteTaskByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(DeleteTaskByIDOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteTaskByIDDefault creates a DeleteTaskByIDDefault with default headers values
func NewDeleteTaskByIDDefault(code int) *DeleteTaskByIDDefault {
	return &DeleteTaskByIDDefault{
		_statusCode: code,
	}
}

/*DeleteTaskByIDDefault handles this case with default header values.

Error response
*/
type DeleteTaskByIDDefault struct {
	_statusCode int

	Payload *models.Fault
}

// Code gets the status code for the delete task by Id default response
func (o *DeleteTaskByIDDefault) Code() int {
	return o._statusCode
}

func (o *DeleteTaskByIDDefault) Error() string {
	return fmt.Sprintf("[DELETE /Deletes/deleteTaskById][%d] deleteTaskById default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteTaskByIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Fault)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*DeleteTaskByIDBody delete task by ID body
swagger:model DeleteTaskByIDBody
*/
type DeleteTaskByIDBody struct {

	// ids
	Ids []int64 `json:"ids"`
}

// Validate validates this delete task by ID body
func (o *DeleteTaskByIDBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *DeleteTaskByIDBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteTaskByIDBody) UnmarshalBinary(b []byte) error {
	var res DeleteTaskByIDBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*DeleteTaskByIDOKBody delete task by ID o k body
swagger:model DeleteTaskByIDOKBody
*/
type DeleteTaskByIDOKBody struct {

	// result
	Result int64 `json:"result,omitempty"`
}

// Validate validates this delete task by ID o k body
func (o *DeleteTaskByIDOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *DeleteTaskByIDOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteTaskByIDOKBody) UnmarshalBinary(b []byte) error {
	var res DeleteTaskByIDOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
