// Code generated by go-swagger; DO NOT EDIT.

package task

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewArpDiscoverNetElementParams creates a new ArpDiscoverNetElementParams object
// with the default values initialized.
func NewArpDiscoverNetElementParams() *ArpDiscoverNetElementParams {
	var ()
	return &ArpDiscoverNetElementParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewArpDiscoverNetElementParamsWithTimeout creates a new ArpDiscoverNetElementParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewArpDiscoverNetElementParamsWithTimeout(timeout time.Duration) *ArpDiscoverNetElementParams {
	var ()
	return &ArpDiscoverNetElementParams{

		timeout: timeout,
	}
}

// NewArpDiscoverNetElementParamsWithContext creates a new ArpDiscoverNetElementParams object
// with the default values initialized, and the ability to set a context for a request
func NewArpDiscoverNetElementParamsWithContext(ctx context.Context) *ArpDiscoverNetElementParams {
	var ()
	return &ArpDiscoverNetElementParams{

		Context: ctx,
	}
}

// NewArpDiscoverNetElementParamsWithHTTPClient creates a new ArpDiscoverNetElementParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewArpDiscoverNetElementParamsWithHTTPClient(client *http.Client) *ArpDiscoverNetElementParams {
	var ()
	return &ArpDiscoverNetElementParams{
		HTTPClient: client,
	}
}

/*ArpDiscoverNetElementParams contains all the parameters to send to the API endpoint
for the arp discover net element operation typically these are written to a http.Request
*/
type ArpDiscoverNetElementParams struct {

	/*TaskParameters
	  netelement (required): network element name; performNetHostAdd: Set to true to automatically add new hosts that are found during discovery; updateReclaim: Set to true to update the last discovered counters for blocks and hosts defined within the network element; ignoreDuplicates: Set to true to ignore duplicate hostnames encountered while adding new hosts; reverseLookup: Set to true to do a reverse DNS lookup and attempt to resolve the FQDN for this address; importInvalid: Set to true to import records the router has flagged as invalid. Set priority to true to create a high priority task.

	*/
	TaskParameters ArpDiscoverNetElementBody

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the arp discover net element params
func (o *ArpDiscoverNetElementParams) WithTimeout(timeout time.Duration) *ArpDiscoverNetElementParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the arp discover net element params
func (o *ArpDiscoverNetElementParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the arp discover net element params
func (o *ArpDiscoverNetElementParams) WithContext(ctx context.Context) *ArpDiscoverNetElementParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the arp discover net element params
func (o *ArpDiscoverNetElementParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the arp discover net element params
func (o *ArpDiscoverNetElementParams) WithHTTPClient(client *http.Client) *ArpDiscoverNetElementParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the arp discover net element params
func (o *ArpDiscoverNetElementParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithTaskParameters adds the taskParameters to the arp discover net element params
func (o *ArpDiscoverNetElementParams) WithTaskParameters(taskParameters ArpDiscoverNetElementBody) *ArpDiscoverNetElementParams {
	o.SetTaskParameters(taskParameters)
	return o
}

// SetTaskParameters adds the taskParameters to the arp discover net element params
func (o *ArpDiscoverNetElementParams) SetTaskParameters(taskParameters ArpDiscoverNetElementBody) {
	o.TaskParameters = taskParameters
}

// WriteToRequest writes these params to a swagger request
func (o *ArpDiscoverNetElementParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if err := r.SetBodyParam(o.TaskParameters); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
