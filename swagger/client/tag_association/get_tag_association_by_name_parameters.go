// Code generated by go-swagger; DO NOT EDIT.

package tag_association

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetTagAssociationByNameParams creates a new GetTagAssociationByNameParams object
// with the default values initialized.
func NewGetTagAssociationByNameParams() *GetTagAssociationByNameParams {
	var ()
	return &GetTagAssociationByNameParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetTagAssociationByNameParamsWithTimeout creates a new GetTagAssociationByNameParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetTagAssociationByNameParamsWithTimeout(timeout time.Duration) *GetTagAssociationByNameParams {
	var ()
	return &GetTagAssociationByNameParams{

		timeout: timeout,
	}
}

// NewGetTagAssociationByNameParamsWithContext creates a new GetTagAssociationByNameParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetTagAssociationByNameParamsWithContext(ctx context.Context) *GetTagAssociationByNameParams {
	var ()
	return &GetTagAssociationByNameParams{

		Context: ctx,
	}
}

// NewGetTagAssociationByNameParamsWithHTTPClient creates a new GetTagAssociationByNameParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetTagAssociationByNameParamsWithHTTPClient(client *http.Client) *GetTagAssociationByNameParams {
	var ()
	return &GetTagAssociationByNameParams{
		HTTPClient: client,
	}
}

/*GetTagAssociationByNameParams contains all the parameters to send to the API endpoint
for the get tag association by name operation typically these are written to a http.Request
*/
type GetTagAssociationByNameParams struct {

	/*Name
	  Name to identity the association

	*/
	Name string
	/*TagName
	  The name of the tag

	*/
	TagName string
	/*Type
	  The type of the association

	*/
	Type string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get tag association by name params
func (o *GetTagAssociationByNameParams) WithTimeout(timeout time.Duration) *GetTagAssociationByNameParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get tag association by name params
func (o *GetTagAssociationByNameParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get tag association by name params
func (o *GetTagAssociationByNameParams) WithContext(ctx context.Context) *GetTagAssociationByNameParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get tag association by name params
func (o *GetTagAssociationByNameParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get tag association by name params
func (o *GetTagAssociationByNameParams) WithHTTPClient(client *http.Client) *GetTagAssociationByNameParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get tag association by name params
func (o *GetTagAssociationByNameParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithName adds the name to the get tag association by name params
func (o *GetTagAssociationByNameParams) WithName(name string) *GetTagAssociationByNameParams {
	o.SetName(name)
	return o
}

// SetName adds the name to the get tag association by name params
func (o *GetTagAssociationByNameParams) SetName(name string) {
	o.Name = name
}

// WithTagName adds the tagName to the get tag association by name params
func (o *GetTagAssociationByNameParams) WithTagName(tagName string) *GetTagAssociationByNameParams {
	o.SetTagName(tagName)
	return o
}

// SetTagName adds the tagName to the get tag association by name params
func (o *GetTagAssociationByNameParams) SetTagName(tagName string) {
	o.TagName = tagName
}

// WithType adds the typeVar to the get tag association by name params
func (o *GetTagAssociationByNameParams) WithType(typeVar string) *GetTagAssociationByNameParams {
	o.SetType(typeVar)
	return o
}

// SetType adds the type to the get tag association by name params
func (o *GetTagAssociationByNameParams) SetType(typeVar string) {
	o.Type = typeVar
}

// WriteToRequest writes these params to a swagger request
func (o *GetTagAssociationByNameParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param name
	qrName := o.Name
	qName := qrName
	if qName != "" {
		if err := r.SetQueryParam("name", qName); err != nil {
			return err
		}
	}

	// query param tagName
	qrTagName := o.TagName
	qTagName := qrTagName
	if qTagName != "" {
		if err := r.SetQueryParam("tagName", qTagName); err != nil {
			return err
		}
	}

	// query param type
	qrType := o.Type
	qType := qrType
	if qType != "" {
		if err := r.SetQueryParam("type", qType); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
