// Code generated by go-swagger; DO NOT EDIT.

package device

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewImportIPAddressRangeParams creates a new ImportIPAddressRangeParams object
// with the default values initialized.
func NewImportIPAddressRangeParams() *ImportIPAddressRangeParams {
	var ()
	return &ImportIPAddressRangeParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewImportIPAddressRangeParamsWithTimeout creates a new ImportIPAddressRangeParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewImportIPAddressRangeParamsWithTimeout(timeout time.Duration) *ImportIPAddressRangeParams {
	var ()
	return &ImportIPAddressRangeParams{

		timeout: timeout,
	}
}

// NewImportIPAddressRangeParamsWithContext creates a new ImportIPAddressRangeParams object
// with the default values initialized, and the ability to set a context for a request
func NewImportIPAddressRangeParamsWithContext(ctx context.Context) *ImportIPAddressRangeParams {
	var ()
	return &ImportIPAddressRangeParams{

		Context: ctx,
	}
}

// NewImportIPAddressRangeParamsWithHTTPClient creates a new ImportIPAddressRangeParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewImportIPAddressRangeParamsWithHTTPClient(client *http.Client) *ImportIPAddressRangeParams {
	var ()
	return &ImportIPAddressRangeParams{
		HTTPClient: client,
	}
}

/*ImportIPAddressRangeParams contains all the parameters to send to the API endpoint
for the import Ip address range operation typically these are written to a http.Request
*/
type ImportIPAddressRangeParams struct {

	/*ImportParameters
	  The input describing the range of IP Addresses.  Required parameters are: addressType, deviceType, startIpAddress, one of endIpAddress or rangeSize, container (if necessary for resolving overlapping space), userDefinedFields defined as required fields. Based on device type, there may be other requirements. Refer to the IPControl API Guide for more information. For userDefinedFields, specify comma-separated name=value pairs, where each pair is enclosed in double quotes.

	*/
	ImportParameters ImportIPAddressRangeBody

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the import Ip address range params
func (o *ImportIPAddressRangeParams) WithTimeout(timeout time.Duration) *ImportIPAddressRangeParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the import Ip address range params
func (o *ImportIPAddressRangeParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the import Ip address range params
func (o *ImportIPAddressRangeParams) WithContext(ctx context.Context) *ImportIPAddressRangeParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the import Ip address range params
func (o *ImportIPAddressRangeParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the import Ip address range params
func (o *ImportIPAddressRangeParams) WithHTTPClient(client *http.Client) *ImportIPAddressRangeParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the import Ip address range params
func (o *ImportIPAddressRangeParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithImportParameters adds the importParameters to the import Ip address range params
func (o *ImportIPAddressRangeParams) WithImportParameters(importParameters ImportIPAddressRangeBody) *ImportIPAddressRangeParams {
	o.SetImportParameters(importParameters)
	return o
}

// SetImportParameters adds the importParameters to the import Ip address range params
func (o *ImportIPAddressRangeParams) SetImportParameters(importParameters ImportIPAddressRangeBody) {
	o.ImportParameters = importParameters
}

// WriteToRequest writes these params to a swagger request
func (o *ImportIPAddressRangeParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if err := r.SetBodyParam(o.ImportParameters); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
