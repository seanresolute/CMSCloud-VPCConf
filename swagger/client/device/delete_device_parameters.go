// Code generated by go-swagger; DO NOT EDIT.

package device

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewDeleteDeviceParams creates a new DeleteDeviceParams object
// with the default values initialized.
func NewDeleteDeviceParams() *DeleteDeviceParams {
	var ()
	return &DeleteDeviceParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteDeviceParamsWithTimeout creates a new DeleteDeviceParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDeleteDeviceParamsWithTimeout(timeout time.Duration) *DeleteDeviceParams {
	var ()
	return &DeleteDeviceParams{

		timeout: timeout,
	}
}

// NewDeleteDeviceParamsWithContext creates a new DeleteDeviceParams object
// with the default values initialized, and the ability to set a context for a request
func NewDeleteDeviceParamsWithContext(ctx context.Context) *DeleteDeviceParams {
	var ()
	return &DeleteDeviceParams{

		Context: ctx,
	}
}

// NewDeleteDeviceParamsWithHTTPClient creates a new DeleteDeviceParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDeleteDeviceParamsWithHTTPClient(client *http.Client) *DeleteDeviceParams {
	var ()
	return &DeleteDeviceParams{
		HTTPClient: client,
	}
}

/*DeleteDeviceParams contains all the parameters to send to the API endpoint
for the delete device operation typically these are written to a http.Request
*/
type DeleteDeviceParams struct {

	/*DeleteParameters
	  The input describing the device to be deleted. Specify the ipAddress of the device to be deleted. container is required only if the ipAddress is not unique due to overlapping space.

	*/
	DeleteParameters DeleteDeviceBody

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the delete device params
func (o *DeleteDeviceParams) WithTimeout(timeout time.Duration) *DeleteDeviceParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete device params
func (o *DeleteDeviceParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete device params
func (o *DeleteDeviceParams) WithContext(ctx context.Context) *DeleteDeviceParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete device params
func (o *DeleteDeviceParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete device params
func (o *DeleteDeviceParams) WithHTTPClient(client *http.Client) *DeleteDeviceParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete device params
func (o *DeleteDeviceParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDeleteParameters adds the deleteParameters to the delete device params
func (o *DeleteDeviceParams) WithDeleteParameters(deleteParameters DeleteDeviceBody) *DeleteDeviceParams {
	o.SetDeleteParameters(deleteParameters)
	return o
}

// SetDeleteParameters adds the deleteParameters to the delete device params
func (o *DeleteDeviceParams) SetDeleteParameters(deleteParameters DeleteDeviceBody) {
	o.DeleteParameters = deleteParameters
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteDeviceParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if err := r.SetBodyParam(o.DeleteParameters); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
