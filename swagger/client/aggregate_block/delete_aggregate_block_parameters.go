// Code generated by go-swagger; DO NOT EDIT.

package aggregate_block

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewDeleteAggregateBlockParams creates a new DeleteAggregateBlockParams object
// with the default values initialized.
func NewDeleteAggregateBlockParams() *DeleteAggregateBlockParams {
	var ()
	return &DeleteAggregateBlockParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteAggregateBlockParamsWithTimeout creates a new DeleteAggregateBlockParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDeleteAggregateBlockParamsWithTimeout(timeout time.Duration) *DeleteAggregateBlockParams {
	var ()
	return &DeleteAggregateBlockParams{

		timeout: timeout,
	}
}

// NewDeleteAggregateBlockParamsWithContext creates a new DeleteAggregateBlockParams object
// with the default values initialized, and the ability to set a context for a request
func NewDeleteAggregateBlockParamsWithContext(ctx context.Context) *DeleteAggregateBlockParams {
	var ()
	return &DeleteAggregateBlockParams{

		Context: ctx,
	}
}

// NewDeleteAggregateBlockParamsWithHTTPClient creates a new DeleteAggregateBlockParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDeleteAggregateBlockParamsWithHTTPClient(client *http.Client) *DeleteAggregateBlockParams {
	var ()
	return &DeleteAggregateBlockParams{
		HTTPClient: client,
	}
}

/*DeleteAggregateBlockParams contains all the parameters to send to the API endpoint
for the delete aggregate block operation typically these are written to a http.Request
*/
type DeleteAggregateBlockParams struct {

	/*DeleteParameters
	  The input describing the block to be deleted. The following parameters are required: blockAddr, blockSize, container.

	*/
	DeleteParameters DeleteAggregateBlockBody

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the delete aggregate block params
func (o *DeleteAggregateBlockParams) WithTimeout(timeout time.Duration) *DeleteAggregateBlockParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete aggregate block params
func (o *DeleteAggregateBlockParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete aggregate block params
func (o *DeleteAggregateBlockParams) WithContext(ctx context.Context) *DeleteAggregateBlockParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete aggregate block params
func (o *DeleteAggregateBlockParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete aggregate block params
func (o *DeleteAggregateBlockParams) WithHTTPClient(client *http.Client) *DeleteAggregateBlockParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete aggregate block params
func (o *DeleteAggregateBlockParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDeleteParameters adds the deleteParameters to the delete aggregate block params
func (o *DeleteAggregateBlockParams) WithDeleteParameters(deleteParameters DeleteAggregateBlockBody) *DeleteAggregateBlockParams {
	o.SetDeleteParameters(deleteParameters)
	return o
}

// SetDeleteParameters adds the deleteParameters to the delete aggregate block params
func (o *DeleteAggregateBlockParams) SetDeleteParameters(deleteParameters DeleteAggregateBlockBody) {
	o.DeleteParameters = deleteParameters
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteAggregateBlockParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if err := r.SetBodyParam(o.DeleteParameters); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
