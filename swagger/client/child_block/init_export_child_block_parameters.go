// Code generated by go-swagger; DO NOT EDIT.

package child_block

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewInitExportChildBlockParams creates a new InitExportChildBlockParams object
// with the default values initialized.
func NewInitExportChildBlockParams() *InitExportChildBlockParams {
	var ()
	return &InitExportChildBlockParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewInitExportChildBlockParamsWithTimeout creates a new InitExportChildBlockParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewInitExportChildBlockParamsWithTimeout(timeout time.Duration) *InitExportChildBlockParams {
	var ()
	return &InitExportChildBlockParams{

		timeout: timeout,
	}
}

// NewInitExportChildBlockParamsWithContext creates a new InitExportChildBlockParams object
// with the default values initialized, and the ability to set a context for a request
func NewInitExportChildBlockParamsWithContext(ctx context.Context) *InitExportChildBlockParams {
	var ()
	return &InitExportChildBlockParams{

		Context: ctx,
	}
}

// NewInitExportChildBlockParamsWithHTTPClient creates a new InitExportChildBlockParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewInitExportChildBlockParamsWithHTTPClient(client *http.Client) *InitExportChildBlockParams {
	var ()
	return &InitExportChildBlockParams{
		HTTPClient: client,
	}
}

/*InitExportChildBlockParams contains all the parameters to send to the API endpoint
for the init export child block operation typically these are written to a http.Request
*/
type InitExportChildBlockParams struct {

	/*ExportParameters
	  The query string syntax and supported selectors are defined in the IPControl CLI and API Guide. Use pageSize to specify the number of results to be returned. Use firstResultPos to indicate where the set of results should begin. Results begin at position 0.

	*/
	ExportParameters InitExportChildBlockBody

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the init export child block params
func (o *InitExportChildBlockParams) WithTimeout(timeout time.Duration) *InitExportChildBlockParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the init export child block params
func (o *InitExportChildBlockParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the init export child block params
func (o *InitExportChildBlockParams) WithContext(ctx context.Context) *InitExportChildBlockParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the init export child block params
func (o *InitExportChildBlockParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the init export child block params
func (o *InitExportChildBlockParams) WithHTTPClient(client *http.Client) *InitExportChildBlockParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the init export child block params
func (o *InitExportChildBlockParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithExportParameters adds the exportParameters to the init export child block params
func (o *InitExportChildBlockParams) WithExportParameters(exportParameters InitExportChildBlockBody) *InitExportChildBlockParams {
	o.SetExportParameters(exportParameters)
	return o
}

// SetExportParameters adds the exportParameters to the init export child block params
func (o *InitExportChildBlockParams) SetExportParameters(exportParameters InitExportChildBlockBody) {
	o.ExportParameters = exportParameters
}

// WriteToRequest writes these params to a swagger request
func (o *InitExportChildBlockParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if err := r.SetBodyParam(o.ExportParameters); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
