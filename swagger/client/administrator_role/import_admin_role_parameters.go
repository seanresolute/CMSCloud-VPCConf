// Code generated by go-swagger; DO NOT EDIT.

package administrator_role

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewImportAdminRoleParams creates a new ImportAdminRoleParams object
// with the default values initialized.
func NewImportAdminRoleParams() *ImportAdminRoleParams {
	var ()
	return &ImportAdminRoleParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewImportAdminRoleParamsWithTimeout creates a new ImportAdminRoleParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewImportAdminRoleParamsWithTimeout(timeout time.Duration) *ImportAdminRoleParams {
	var ()
	return &ImportAdminRoleParams{

		timeout: timeout,
	}
}

// NewImportAdminRoleParamsWithContext creates a new ImportAdminRoleParams object
// with the default values initialized, and the ability to set a context for a request
func NewImportAdminRoleParamsWithContext(ctx context.Context) *ImportAdminRoleParams {
	var ()
	return &ImportAdminRoleParams{

		Context: ctx,
	}
}

// NewImportAdminRoleParamsWithHTTPClient creates a new ImportAdminRoleParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewImportAdminRoleParamsWithHTTPClient(client *http.Client) *ImportAdminRoleParams {
	var ()
	return &ImportAdminRoleParams{
		HTTPClient: client,
	}
}

/*ImportAdminRoleParams contains all the parameters to send to the API endpoint
for the import admin role operation typically these are written to a http.Request
*/
type ImportAdminRoleParams struct {

	/*ImportParameters
	  The input describing the administrator role. roleName is required. To modify an administrator role, specify id.

	*/
	ImportParameters ImportAdminRoleBody

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the import admin role params
func (o *ImportAdminRoleParams) WithTimeout(timeout time.Duration) *ImportAdminRoleParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the import admin role params
func (o *ImportAdminRoleParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the import admin role params
func (o *ImportAdminRoleParams) WithContext(ctx context.Context) *ImportAdminRoleParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the import admin role params
func (o *ImportAdminRoleParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the import admin role params
func (o *ImportAdminRoleParams) WithHTTPClient(client *http.Client) *ImportAdminRoleParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the import admin role params
func (o *ImportAdminRoleParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithImportParameters adds the importParameters to the import admin role params
func (o *ImportAdminRoleParams) WithImportParameters(importParameters ImportAdminRoleBody) *ImportAdminRoleParams {
	o.SetImportParameters(importParameters)
	return o
}

// SetImportParameters adds the importParameters to the import admin role params
func (o *ImportAdminRoleParams) SetImportParameters(importParameters ImportAdminRoleBody) {
	o.ImportParameters = importParameters
}

// WriteToRequest writes these params to a swagger request
func (o *ImportAdminRoleParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if err := r.SetBodyParam(o.ImportParameters); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
