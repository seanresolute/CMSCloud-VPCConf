// Code generated by go-swagger; DO NOT EDIT.

package d_h_c_p_server

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/CMSgov/CMS-AWS-West-Network-Architecture/vpc-automation/swagger/models"
)

// GetDhcpServerByNameReader is a Reader for the GetDhcpServerByName structure.
type GetDhcpServerByNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDhcpServerByNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetDhcpServerByNameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewGetDhcpServerByNameDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetDhcpServerByNameOK creates a GetDhcpServerByNameOK with default headers values
func NewGetDhcpServerByNameOK() *GetDhcpServerByNameOK {
	return &GetDhcpServerByNameOK{}
}

/*GetDhcpServerByNameOK handles this case with default header values.

DhcpServer
*/
type GetDhcpServerByNameOK struct {
	Payload *models.WSDhcpServer
}

func (o *GetDhcpServerByNameOK) Error() string {
	return fmt.Sprintf("[GET /Gets/getDhcpServerByName][%d] getDhcpServerByNameOK  %+v", 200, o.Payload)
}

func (o *GetDhcpServerByNameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.WSDhcpServer)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDhcpServerByNameDefault creates a GetDhcpServerByNameDefault with default headers values
func NewGetDhcpServerByNameDefault(code int) *GetDhcpServerByNameDefault {
	return &GetDhcpServerByNameDefault{
		_statusCode: code,
	}
}

/*GetDhcpServerByNameDefault handles this case with default header values.

Error response
*/
type GetDhcpServerByNameDefault struct {
	_statusCode int

	Payload *models.Fault
}

// Code gets the status code for the get dhcp server by name default response
func (o *GetDhcpServerByNameDefault) Code() int {
	return o._statusCode
}

func (o *GetDhcpServerByNameDefault) Error() string {
	return fmt.Sprintf("[GET /Gets/getDhcpServerByName][%d] getDhcpServerByName default  %+v", o._statusCode, o.Payload)
}

func (o *GetDhcpServerByNameDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Fault)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
