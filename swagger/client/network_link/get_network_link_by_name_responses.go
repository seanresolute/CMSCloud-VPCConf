// Code generated by go-swagger; DO NOT EDIT.

package network_link

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/CMSgov/CMS-AWS-West-Network-Architecture/vpc-automation/swagger/models"
)

// GetNetworkLinkByNameReader is a Reader for the GetNetworkLinkByName structure.
type GetNetworkLinkByNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetNetworkLinkByNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetNetworkLinkByNameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewGetNetworkLinkByNameDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetNetworkLinkByNameOK creates a GetNetworkLinkByNameOK with default headers values
func NewGetNetworkLinkByNameOK() *GetNetworkLinkByNameOK {
	return &GetNetworkLinkByNameOK{}
}

/*GetNetworkLinkByNameOK handles this case with default header values.

NetworkLink
*/
type GetNetworkLinkByNameOK struct {
	Payload *models.WSNetworkLink
}

func (o *GetNetworkLinkByNameOK) Error() string {
	return fmt.Sprintf("[GET /Gets/getNetworkLinkByName][%d] getNetworkLinkByNameOK  %+v", 200, o.Payload)
}

func (o *GetNetworkLinkByNameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.WSNetworkLink)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNetworkLinkByNameDefault creates a GetNetworkLinkByNameDefault with default headers values
func NewGetNetworkLinkByNameDefault(code int) *GetNetworkLinkByNameDefault {
	return &GetNetworkLinkByNameDefault{
		_statusCode: code,
	}
}

/*GetNetworkLinkByNameDefault handles this case with default header values.

Error response
*/
type GetNetworkLinkByNameDefault struct {
	_statusCode int

	Payload *models.Fault
}

// Code gets the status code for the get network link by name default response
func (o *GetNetworkLinkByNameDefault) Code() int {
	return o._statusCode
}

func (o *GetNetworkLinkByNameDefault) Error() string {
	return fmt.Sprintf("[GET /Gets/getNetworkLinkByName][%d] getNetworkLinkByName default  %+v", o._statusCode, o.Payload)
}

func (o *GetNetworkLinkByNameDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Fault)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
