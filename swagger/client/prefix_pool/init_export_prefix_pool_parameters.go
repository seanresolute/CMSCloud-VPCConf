// Code generated by go-swagger; DO NOT EDIT.

package prefix_pool

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewInitExportPrefixPoolParams creates a new InitExportPrefixPoolParams object
// with the default values initialized.
func NewInitExportPrefixPoolParams() *InitExportPrefixPoolParams {
	var ()
	return &InitExportPrefixPoolParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewInitExportPrefixPoolParamsWithTimeout creates a new InitExportPrefixPoolParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewInitExportPrefixPoolParamsWithTimeout(timeout time.Duration) *InitExportPrefixPoolParams {
	var ()
	return &InitExportPrefixPoolParams{

		timeout: timeout,
	}
}

// NewInitExportPrefixPoolParamsWithContext creates a new InitExportPrefixPoolParams object
// with the default values initialized, and the ability to set a context for a request
func NewInitExportPrefixPoolParamsWithContext(ctx context.Context) *InitExportPrefixPoolParams {
	var ()
	return &InitExportPrefixPoolParams{

		Context: ctx,
	}
}

// NewInitExportPrefixPoolParamsWithHTTPClient creates a new InitExportPrefixPoolParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewInitExportPrefixPoolParamsWithHTTPClient(client *http.Client) *InitExportPrefixPoolParams {
	var ()
	return &InitExportPrefixPoolParams{
		HTTPClient: client,
	}
}

/*InitExportPrefixPoolParams contains all the parameters to send to the API endpoint
for the init export prefix pool operation typically these are written to a http.Request
*/
type InitExportPrefixPoolParams struct {

	/*ExportParameters
	  The query string syntax and supported selectors are defined in the IPControl CLI and API Guide. Use pageSize to specify the number of results to be returned. Use firstResultPos to indicate where the set of results should begin. Results begin at position 0.

	*/
	ExportParameters InitExportPrefixPoolBody

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the init export prefix pool params
func (o *InitExportPrefixPoolParams) WithTimeout(timeout time.Duration) *InitExportPrefixPoolParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the init export prefix pool params
func (o *InitExportPrefixPoolParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the init export prefix pool params
func (o *InitExportPrefixPoolParams) WithContext(ctx context.Context) *InitExportPrefixPoolParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the init export prefix pool params
func (o *InitExportPrefixPoolParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the init export prefix pool params
func (o *InitExportPrefixPoolParams) WithHTTPClient(client *http.Client) *InitExportPrefixPoolParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the init export prefix pool params
func (o *InitExportPrefixPoolParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithExportParameters adds the exportParameters to the init export prefix pool params
func (o *InitExportPrefixPoolParams) WithExportParameters(exportParameters InitExportPrefixPoolBody) *InitExportPrefixPoolParams {
	o.SetExportParameters(exportParameters)
	return o
}

// SetExportParameters adds the exportParameters to the init export prefix pool params
func (o *InitExportPrefixPoolParams) SetExportParameters(exportParameters InitExportPrefixPoolBody) {
	o.ExportParameters = exportParameters
}

// WriteToRequest writes these params to a swagger request
func (o *InitExportPrefixPoolParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if err := r.SetBodyParam(o.ExportParameters); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
