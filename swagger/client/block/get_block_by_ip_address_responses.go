// Code generated by go-swagger; DO NOT EDIT.

package block

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/CMSgov/CMS-AWS-West-Network-Architecture/vpc-automation/swagger/models"
)

// GetBlockByIPAddressReader is a Reader for the GetBlockByIPAddress structure.
type GetBlockByIPAddressReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetBlockByIPAddressReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetBlockByIPAddressOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewGetBlockByIPAddressDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetBlockByIPAddressOK creates a GetBlockByIPAddressOK with default headers values
func NewGetBlockByIPAddressOK() *GetBlockByIPAddressOK {
	return &GetBlockByIPAddressOK{}
}

/*GetBlockByIPAddressOK handles this case with default header values.

Block
*/
type GetBlockByIPAddressOK struct {
	Payload *models.WSGenericBlock
}

func (o *GetBlockByIPAddressOK) Error() string {
	return fmt.Sprintf("[GET /Gets/getBlockByIpAddress][%d] getBlockByIpAddressOK  %+v", 200, o.Payload)
}

func (o *GetBlockByIPAddressOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.WSGenericBlock)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBlockByIPAddressDefault creates a GetBlockByIPAddressDefault with default headers values
func NewGetBlockByIPAddressDefault(code int) *GetBlockByIPAddressDefault {
	return &GetBlockByIPAddressDefault{
		_statusCode: code,
	}
}

/*GetBlockByIPAddressDefault handles this case with default header values.

Error response
*/
type GetBlockByIPAddressDefault struct {
	_statusCode int

	Payload *models.Fault
}

// Code gets the status code for the get block by Ip address default response
func (o *GetBlockByIPAddressDefault) Code() int {
	return o._statusCode
}

func (o *GetBlockByIPAddressDefault) Error() string {
	return fmt.Sprintf("[GET /Gets/getBlockByIpAddress][%d] getBlockByIpAddress default  %+v", o._statusCode, o.Payload)
}

func (o *GetBlockByIPAddressDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Fault)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
