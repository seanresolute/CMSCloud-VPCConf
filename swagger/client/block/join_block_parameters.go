// Code generated by go-swagger; DO NOT EDIT.

package block

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewJoinBlockParams creates a new JoinBlockParams object
// with the default values initialized.
func NewJoinBlockParams() *JoinBlockParams {
	var ()
	return &JoinBlockParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewJoinBlockParamsWithTimeout creates a new JoinBlockParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewJoinBlockParamsWithTimeout(timeout time.Duration) *JoinBlockParams {
	var ()
	return &JoinBlockParams{

		timeout: timeout,
	}
}

// NewJoinBlockParamsWithContext creates a new JoinBlockParams object
// with the default values initialized, and the ability to set a context for a request
func NewJoinBlockParamsWithContext(ctx context.Context) *JoinBlockParams {
	var ()
	return &JoinBlockParams{

		Context: ctx,
	}
}

// NewJoinBlockParamsWithHTTPClient creates a new JoinBlockParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewJoinBlockParamsWithHTTPClient(client *http.Client) *JoinBlockParams {
	var ()
	return &JoinBlockParams{
		HTTPClient: client,
	}
}

/*JoinBlockParams contains all the parameters to send to the API endpoint
for the join block operation typically these are written to a http.Request
*/
type JoinBlockParams struct {

	/*ModifyParameters
	  The input describing the blocks to be joined. Specify the name of the block. The container name must be specified if the block name is not unique, due to overlapping space or naming conventions.

	*/
	ModifyParameters JoinBlockBody

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the join block params
func (o *JoinBlockParams) WithTimeout(timeout time.Duration) *JoinBlockParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the join block params
func (o *JoinBlockParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the join block params
func (o *JoinBlockParams) WithContext(ctx context.Context) *JoinBlockParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the join block params
func (o *JoinBlockParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the join block params
func (o *JoinBlockParams) WithHTTPClient(client *http.Client) *JoinBlockParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the join block params
func (o *JoinBlockParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithModifyParameters adds the modifyParameters to the join block params
func (o *JoinBlockParams) WithModifyParameters(modifyParameters JoinBlockBody) *JoinBlockParams {
	o.SetModifyParameters(modifyParameters)
	return o
}

// SetModifyParameters adds the modifyParameters to the join block params
func (o *JoinBlockParams) SetModifyParameters(modifyParameters JoinBlockBody) {
	o.ModifyParameters = modifyParameters
}

// WriteToRequest writes these params to a swagger request
func (o *JoinBlockParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if err := r.SetBodyParam(o.ModifyParameters); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
