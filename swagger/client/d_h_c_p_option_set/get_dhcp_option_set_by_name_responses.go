// Code generated by go-swagger; DO NOT EDIT.

package d_h_c_p_option_set

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/CMSgov/CMS-AWS-West-Network-Architecture/vpc-automation/swagger/models"
)

// GetDhcpOptionSetByNameReader is a Reader for the GetDhcpOptionSetByName structure.
type GetDhcpOptionSetByNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDhcpOptionSetByNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetDhcpOptionSetByNameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewGetDhcpOptionSetByNameDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetDhcpOptionSetByNameOK creates a GetDhcpOptionSetByNameOK with default headers values
func NewGetDhcpOptionSetByNameOK() *GetDhcpOptionSetByNameOK {
	return &GetDhcpOptionSetByNameOK{}
}

/*GetDhcpOptionSetByNameOK handles this case with default header values.

DhcpOptionSet
*/
type GetDhcpOptionSetByNameOK struct {
	Payload *models.WSDhcpOptionSet
}

func (o *GetDhcpOptionSetByNameOK) Error() string {
	return fmt.Sprintf("[GET /Gets/getDhcpOptionSetByName][%d] getDhcpOptionSetByNameOK  %+v", 200, o.Payload)
}

func (o *GetDhcpOptionSetByNameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.WSDhcpOptionSet)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDhcpOptionSetByNameDefault creates a GetDhcpOptionSetByNameDefault with default headers values
func NewGetDhcpOptionSetByNameDefault(code int) *GetDhcpOptionSetByNameDefault {
	return &GetDhcpOptionSetByNameDefault{
		_statusCode: code,
	}
}

/*GetDhcpOptionSetByNameDefault handles this case with default header values.

Error response
*/
type GetDhcpOptionSetByNameDefault struct {
	_statusCode int

	Payload *models.Fault
}

// Code gets the status code for the get dhcp option set by name default response
func (o *GetDhcpOptionSetByNameDefault) Code() int {
	return o._statusCode
}

func (o *GetDhcpOptionSetByNameDefault) Error() string {
	return fmt.Sprintf("[GET /Gets/getDhcpOptionSetByName][%d] getDhcpOptionSetByName default  %+v", o._statusCode, o.Payload)
}

func (o *GetDhcpOptionSetByNameDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Fault)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
