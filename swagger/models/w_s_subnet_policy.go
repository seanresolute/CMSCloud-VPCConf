// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/swag"
)

// WSSubnetPolicy w s subnet policy
// swagger:model WSSubnetPolicy
type WSSubnetPolicy struct {

	// d h c p options set
	DHCPOptionsSet string `json:"DHCPOptionsSet,omitempty"`

	// d h c p policy set
	DHCPPolicySet string `json:"DHCPPolicySet,omitempty"`

	// DNS servers
	DNSServers []string `json:"DNSServers"`

	// cascade primary dhcp server
	CascadePrimaryDhcpServer bool `json:"cascadePrimaryDhcpServer,omitempty"`

	// default gateway
	DefaultGateway string `json:"defaultGateway,omitempty"`

	// failover d h c p server
	FailoverDHCPServer string `json:"failoverDHCPServer,omitempty"`

	// forward domain types
	ForwardDomainTypes []string `json:"forwardDomainTypes"`

	// forward domains
	ForwardDomains []string `json:"forwardDomains"`

	// network link
	NetworkLink string `json:"networkLink,omitempty"`

	// primary d h c p server
	PrimaryDHCPServer string `json:"primaryDHCPServer,omitempty"`

	// primary w i n s server
	PrimaryWINSServer string `json:"primaryWINSServer,omitempty"`

	// reverse domain types
	ReverseDomainTypes []string `json:"reverseDomainTypes"`

	// reverse domains
	ReverseDomains []string `json:"reverseDomains"`
}

// Validate validates this w s subnet policy
func (m *WSSubnetPolicy) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *WSSubnetPolicy) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *WSSubnetPolicy) UnmarshalBinary(b []byte) error {
	var res WSSubnetPolicy
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
