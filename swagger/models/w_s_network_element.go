// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/swag"
)

// WSNetworkElement w s network element
// swagger:model WSNetworkElement
type WSNetworkElement struct {

	// s n m p retries
	SNMPRetries int64 `json:"SNMPRetries,omitempty"`

	// s n m p timeout
	SNMPTimeout int64 `json:"SNMPTimeout,omitempty"`

	// s n m p version
	SNMPVersion string `json:"SNMPVersion,omitempty"`

	// s n m psys descr
	SNMPsysDescr string `json:"SNMPsysDescr,omitempty"`

	// s n m psys location
	SNMPsysLocation string `json:"SNMPsysLocation,omitempty"`

	// s n m psys name
	SNMPsysName string `json:"SNMPsysName,omitempty"`

	// s n m psys services
	SNMPsysServices string `json:"SNMPsysServices,omitempty"`

	// agent names
	AgentNames []string `json:"agentNames"`

	// description
	Description string `json:"description,omitempty"`

	// global sync
	GlobalSync bool `json:"globalSync,omitempty"`

	// id
	ID int64 `json:"id,omitempty"`

	// interface names
	InterfaceNames []string `json:"interfaceNames"`

	// interface status
	InterfaceStatus []string `json:"interfaceStatus"`

	// interface template
	InterfaceTemplate string `json:"interfaceTemplate,omitempty"`

	// interface vrf
	InterfaceVrf []string `json:"interfaceVrf"`

	// ip address
	IPAddress string `json:"ipAddress,omitempty"`

	// model
	Model string `json:"model,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// read community string
	ReadCommunityString string `json:"readCommunityString,omitempty"`

	// ssh pass
	SSHPass string `json:"sshPass,omitempty"`

	// ssh user
	SSHUser string `json:"sshUser,omitempty"`

	// subnet collection type
	SubnetCollectionType string `json:"subnetCollectionType,omitempty"`

	// type
	Type string `json:"type,omitempty"`

	// v3 auth password
	V3AuthPassword string `json:"v3AuthPassword,omitempty"`

	// v3 auth protocol
	V3AuthProtocol string `json:"v3AuthProtocol,omitempty"`

	// v3 context name
	V3ContextName string `json:"v3ContextName,omitempty"`

	// v3 engine Id
	V3EngineID string `json:"v3EngineId,omitempty"`

	// v3 privacy password
	V3PrivacyPassword string `json:"v3PrivacyPassword,omitempty"`

	// v3 privacy protocol
	V3PrivacyProtocol string `json:"v3PrivacyProtocol,omitempty"`

	// v3 username
	V3Username string `json:"v3Username,omitempty"`

	// vendor
	Vendor string `json:"vendor,omitempty"`
}

// Validate validates this w s network element
func (m *WSNetworkElement) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *WSNetworkElement) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *WSNetworkElement) UnmarshalBinary(b []byte) error {
	var res WSNetworkElement
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
