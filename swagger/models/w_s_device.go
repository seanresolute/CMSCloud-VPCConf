// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// WSDevice w s device
// swagger:model WSDevice
type WSDevice struct {

	// m a c address
	MACAddress string `json:"MACAddress,omitempty"`

	// address type
	AddressType string `json:"addressType,omitempty"`

	// admin login Id
	AdminLoginID string `json:"adminLoginId,omitempty"`

	// aliases
	Aliases []string `json:"aliases"`

	// container
	Container string `json:"container,omitempty"`

	// createdate
	Createdate string `json:"createdate,omitempty"`

	// description
	Description string `json:"description,omitempty"`

	// device type
	DeviceType string `json:"deviceType,omitempty"`

	// domain name
	DomainName string `json:"domainName,omitempty"`

	// domain type
	DomainType string `json:"domainType,omitempty"`

	// duid
	Duid string `json:"duid,omitempty"`

	// dup warning
	DupWarning string `json:"dupWarning,omitempty"`

	// exclude from discovery
	ExcludeFromDiscovery string `json:"excludeFromDiscovery,omitempty"`

	// hostname
	Hostname string `json:"hostname,omitempty"`

	// hw type
	HwType string `json:"hwType,omitempty"`

	// id
	ID int64 `json:"id,omitempty"`

	// interfaces
	Interfaces []*WSInterface `json:"interfaces"`

	// ip address
	IPAddress string `json:"ipAddress,omitempty"`

	// lastupdate
	Lastupdate string `json:"lastupdate,omitempty"`

	// resource record flag
	ResourceRecordFlag string `json:"resourceRecordFlag,omitempty"`

	// split pool
	SplitPool string `json:"splitPool,omitempty"`

	// user defined fields
	UserDefinedFields []string `json:"userDefinedFields"`
}

// Validate validates this w s device
func (m *WSDevice) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateInterfaces(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *WSDevice) validateInterfaces(formats strfmt.Registry) error {

	if swag.IsZero(m.Interfaces) { // not required
		return nil
	}

	for i := 0; i < len(m.Interfaces); i++ {
		if swag.IsZero(m.Interfaces[i]) { // not required
			continue
		}

		if m.Interfaces[i] != nil {
			if err := m.Interfaces[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("interfaces" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *WSDevice) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *WSDevice) UnmarshalBinary(b []byte) error {
	var res WSDevice
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
